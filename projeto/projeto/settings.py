"""
Django settings for projeto project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$0sv7r66)pl2s)8w9o3b&s-tzk49$e#oghz57wo-0xuw%%@^-+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_python3_ldap',
    'onda',
    'crispy_forms',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'projeto.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'projeto.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Brazil/East'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

# Static files (CSS, JavaScript, Images)
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]
 
# For static files not particular to any app.
STATICFILES_DIRS = [               
    os.path.join(BASE_DIR, 'static'),
]

MEDIA_URL ='/media/'

MEDIA_ROOT ='media'

LOGIN_URL = '/login/'

LOGIN_REDIRECT_URL = 'url_administrador_onda'

LOGOUT_REDIRECT_URL = 'url_login'

CRISPY_TEMPLATE_PACK = 'bootstrap4'


# Para autenticação LDAP
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'django_python3_ldap.auth.LDAPBackend',
]

# O URL do servidor LDAP.
LDAP_AUTH_URL = "ldap://localhost:389"

# Iniciar TLS na conexão.
LDAP_AUTH_USE_TLS = False

# A base de pesquisa LDAP para procurar usuários.
LDAP_AUTH_SEARCH_BASE = "ou=people,dc=example,dc=com"

# A classe LDAP que representa um usuário.
LDAP_AUTH_OBJECT_CLASS = "inetOrgPerson"

# Campos do modelo do usuário mapeados para o LDAP
# atributos que os representam.
LDAP_AUTH_USER_FIELDS = {
    "username": "uid",
    "first_name": "givenName",
    "last_name": "sn",
    "email": "mail",
}

# Uma tupla de campos de modelo do django usada para identificar exclusivamente um usuário.
LDAP_AUTH_USER_LOOKUP_FIELDS = ("username",)

# Caminho para uma chamada que adota um dict de {model_field_name: value},
# retornando um dict de dados de modelo limpos.
# Use isso para personalizar como os dados carregados do LDAP são salvos no modelo de usuário.
LDAP_AUTH_CLEAN_USER_DATA = "django_python3_ldap.utils.clean_user_data"

# Caminho para uma chamada que leva um modelo de usuário e um dict de {ldap_field_name: [value]},
# e salva qualquer relacionamento adicional com o usuário com base nos dados LDAP.
# Use isso para personalizar como os dados carregados do LDAP são salvos nas relações de modelo do usuário.
# Para personalizar campos não relacionados ao modelo do usuário, use LDAP_AUTH_CLEAN_USER_DATA.
LDAP_AUTH_SYNC_USER_RELATIONS = "django_python3_ldap.utils.sync_user_relations"

# Caminho para uma chamada que adota um dict de {ldap_field_name: value},
# retornando uma lista de [ldap_search_filter]. Os filtros de pesquisa serão AND'd
# juntos ao criar o filtro de pesquisa final.
LDAP_AUTH_FORMAT_SEARCH_FILTERS = "django_python3_ldap.utils.format_search_filters"

# Caminho para uma chamada que adota um ditado de {model_field_name: value} e retorna
# uma sequência do nome de usuário para vincular ao servidor LDAP.
# Use isso para oferecer suporte a diferentes tipos de servidor LDAP.
LDAP_AUTH_FORMAT_USERNAME = "django_python3_ldap.utils.format_username_active_directory"

# Define o domínio de login para usuários do Active Directory.
LDAP_AUTH_ACTIVE_DIRECTORY_DOMAIN = None

# O nome de usuário e senha LDAP de um usuário para consultar o banco de dados LDAP
# detalhes. Se Nenhum, o usuário autenticado será usado para consultar e
# o comando `ldap_sync_users` executará uma consulta anônima.
LDAP_AUTH_CONNECTION_USERNAME = ""
LDAP_AUTH_CONNECTION_PASSWORD = ""

# Defina o tempo limite de conexão / recebimento (em segundos) na biblioteca subjacente `ldap3`.
LDAP_AUTH_CONNECT_TIMEOUT = None
LDAP_AUTH_RECEIVE_TIMEOUT = None